Certificate:
    type: ClientX509
    label: Certificate
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_CERTIFICATE_WEBSERVER
    role: 
        default: ''
        handler@: auth.roledb
        argument: dn
        
Signature:
    type: X509
    label: Signature
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_SIGNATURE
    # define your trust anchors here
    realm:
    - list of realm names 
    cacert:
    - list of cacert identifiers
    challenge_length: 256
    role: 
        default: ''
        handler@: auth.roledb
        argument: dn

Anonymous:
    type: Anonymous
    label: Anonymous
    

User Password:
    type: Password
    label: User Password
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_PASSWORD
    # howto generate sha1 passphrases? 
    # echo -n root | openssl sha1 -binary | openssl base64
    user:
        John Doe:
            digest: "{SSHA}TZXM/aqflDDQAmSWVxSDVWnH+NhxNU5w"
            role: User

Operator Password:
    type: Password
    label: Operator Password
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_PASSWORD
    user:
      - name: root
        digest: "{SSHA}+u48F1BajP3ycfY/azvTBqprsStuUnhM"
        role: CA Operator
      - name: raop
        digest: "{SSHA}ejZpY22dFwjVI48z14y2jYuToPRjOXRP"
        role: RA Operator
        
External Dynamic Role:
    type: External
    label: External Dynamic Role
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_EXTERNAL
    command: echo -n $PASSWD
    # if this field is empty then the role is determined dynamically -->
    role: ''
    pattern: x
    replacement: x
    env:
       LOGIN: __USER__
       PASSWD: __PASSWD__

External Static Role:
    type: External
    label: External Static Role
    description: I18N_OPENXPKI_CONFIG_AUTH_HANDLER_DESCRIPTION_EXTERNAL
    command: echo -n $PASSWD
    role: RA Operator
    pattern: x
    replacement: x
    env:
       LOGIN: __USER__
       PASSWD: __PASSWD__

System:
    type: Anonymous
    label: System
    role: System



